using AIPXiaoTong.IService;
using AIPXiaoTong.Model;
using PingAnAPI;
using PingAnAPI.Model;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AIPXiaoTong.Service
{
    public class PingAnAPIService : IPingAnAPIService
    {
        private PingAnExec pingAnExec;

        public PingAnAPIService()
        {
            var url = System.Configuration.ConfigurationManager.AppSettings["PingAn_APIUrl"].ToString();
            var publicKey = System.Configuration.ConfigurationManager.AppSettings["PingAn_APIPublicKey"].ToString();
            var privateKey = System.Configuration.ConfigurationManager.AppSettings["PingAn_APIPrivateKey"].ToString();
            var redirectUrl = System.Configuration.ConfigurationManager.AppSettings["PingAn_RedirectUrl"].ToString();
            var autoLoginUrl = System.Configuration.ConfigurationManager.AppSettings["PingAn_ALUrl"].ToString();
            var returnUrl = System.Configuration.ConfigurationManager.AppSettings["PingAn_ALReturnUrl"].ToString();
            var sha1Key = System.Configuration.ConfigurationManager.AppSettings["PingAn_ALSha1Key"].ToString();
            var autoLoginPubKey = System.Configuration.ConfigurationManager.AppSettings["PingAn_ALPublicKey"].ToString();

            pingAnExec = new PingAnExec(url, publicKey, privateKey, redirectUrl, autoLoginUrl, returnUrl, sha1Key, autoLoginPubKey);
        }

        /// <summary>
        /// 预下单接口
        /// </summary>
        /// <returns></returns>
        public PreparedFreezeOrderResponse PreparedFreezeOrder(OrderPaid orderPaid, PingAnOrderPaid pingAnOrderPaid)
        {
            PreparedFreezeOrderRequest request = new PreparedFreezeOrderRequest();
            request.channel = pingAnOrderPaid.Channel;
            request.userName = orderPaid.MemberName;
            request.cardNumber = orderPaid.MemberIDNumber;
            request.mobile = orderPaid.MemberMobile;
            request.businessName = pingAnOrderPaid.BusinessName;
            request.orderValidDay = pingAnOrderPaid.OrderValidDay;
            request.freezeAmt = Convert.ToDouble(orderPaid.TransactionAmount);
            request.freezeTimeLimit = pingAnOrderPaid.FreezeTimeLimit;
            request.freezeProduct = pingAnOrderPaid.FreezeProduct;
            request.autoFreeze = pingAnOrderPaid.AutoFreeze;
            request.transCode = pingAnOrderPaid.TransCode;

            //request.channel = "1007041";
            //request.userName = "刘勋";
            //request.cardNumber = "430981199211104634";
            //request.mobile = "15273738880";
            //request.businessName = "购机业务";
            //request.orderValidDay = 3;
            //request.freezeAmt = 0.01;
            //request.freezeTimeLimit = 3;
            //request.freezeProduct = 1;
            //request.autoFreeze = "00";
            //request.transCode = "001";

            var response = pingAnExec.Exec(request);

            return response as PreparedFreezeOrderResponse;
        }

        /// <summary>
        /// 查询订单接口
        /// </summary>
        /// <returns></returns>
        public QueryMarginsOrderDetailResponse QueryMarginsOrderDetail()
        {
            QueryMarginsOrderDetailRequest request = new QueryMarginsOrderDetailRequest();
            request.channel = "1007041";
            request.bankOrderNo = "9230081901312615814160";
            //request.cardNumber = "430981199211104634";
            request.transCode = "002";
            //request.accountType = "2";

            var response = pingAnExec.Exec(request);

            return response as QueryMarginsOrderDetailResponse;
        }

        /// <summary>
        /// 解止付接口
        /// </summary>
        /// <returns></returns>
        public UnFreezeMarginsOrderResponse UnFreezeMarginsOrder()
        {
            UnFreezeMarginsOrderRequest request = new UnFreezeMarginsOrderRequest();
            request.channel = "1007041";
            request.bankOrderNo = "9230081901312615814160";
            request.cardNumber = "430981199211104634";
            request.transCode = "004";

            var response = pingAnExec.Exec(request);

            return response as UnFreezeMarginsOrderResponse;
        }

    }
}
