using AIPXiaoTong.IService;
using AIPXiaoTong.Model;
using Framework.LambdaExpression;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Text;
using System.Threading.Tasks;

namespace AIPXiaoTong.Service
{
    public class ProjectService : BusinessService<Project>, IProjectService
    {
        public override Expression<Func<Project, bool>> GetExpress<QM>(QM model)
        {
            Expression<Func<Project, bool>> express = DynamicExpressions.True<Project>();

            var m = model as ProjectQM;

            if (!string.IsNullOrWhiteSpace(m.ProjetName))
            {
                express = express.AndAlso(t => t.ProjetName == m.ProjetName.Trim());
            }
            //if (m.DistrictManagementID != null)
            //{
            //    express = express.AndAlso(t => t.DistrictManagementID == m.DistrictManagementID);
            //}
            if (m.Status != null)
            {
                express = express.AndAlso(t => t.Status == m.Status);
            }

            return express;
        }
    }
}