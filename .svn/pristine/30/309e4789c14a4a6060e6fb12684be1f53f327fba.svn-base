using AIPXiaoTong.IService;
using AIPXiaoTong.Model;
using AIPXiaoTong.Model.Site;
using Framework.Common;
using Framework.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace AIPXiaoTong.Site.Controllers
{
    public class ProjectReviewController : BaseController
    {
        private IProjectReviewService iProjectReviewService;
        private IProjectManagementService iProjectManagementService;
        private IEmployeeService iEmployeeService;
        private IDistrictManagementService iDistrictManagementService;
        private IMerchantService iMerchantService;

        public ProjectReviewController(IProjectReviewService iProjectReviewService,
                                            IEmployeeService iEmployeeService,
                                            IDistrictManagementService iDistrictManagementService,
                                            IMerchantService iMerchantService,
                                            IProjectManagementService iProjectManagementService)
        {
            this.iProjectReviewService = iProjectReviewService;
            this.iEmployeeService = iEmployeeService;
            this.iDistrictManagementService = iDistrictManagementService;
            this.iMerchantService = iMerchantService;
            this.iProjectManagementService = iProjectManagementService;
        }

        public ActionResult Index(ProjectManagementQM model)
        {
            var list = this.iProjectManagementService.GetListModel<ProjectManagementLM, ProjectManagementQM>(model);

            if (Request.IsAjaxRequest())
            {
                return PartialView("Grid", list);
            }
            else
            {
                BindData();
            }

            return View(list);
        }

        private void BindData()
        {

        }

        public JsonResult NoPass(long ID, string Msg)
        {
            ResultModel result = new ResultModel();
            try
            {
                var status = ProjectManagementStatus.AlreadySubmit.ToInt();

                var e = iProjectManagementService.Get(t => t.ID == ID && t.Status == status);

                if (e == null)
                    throw new Exception("记录不存在，请刷新页面");

                e.Status = ProjectManagementStatus.NotPass.ToInt();
                e.Reason = Msg;

                iProjectManagementService.Save(e);

                iProjectManagementService.Commit();

            }
            catch (System.Data.Entity.Infrastructure.DbUpdateException ex)
            {
                result.ResultMessage = ex.InnerException.InnerException.Message;
            }
            catch (Exception ex)
            {
                result.ResultMessage = ex.Message;
            }

            return Json(result, JsonRequestBehavior.AllowGet);
        }

        public JsonResult Audit(long ID)
        {
            ResultModel result = new ResultModel();
            try
            {
                var status = ProjectManagementStatus.AlreadySubmit.ToInt();

                var e = iProjectManagementService.Get(t => t.ID == ID && t.Status == status);

                if (e == null)
                    throw new Exception("记录不存在，请刷新页面");

                e.Status = ProjectManagementStatus.Pass.ToInt();

                iProjectManagementService.Save(e);

                iProjectManagementService.Commit();

            }
            catch (System.Data.Entity.Infrastructure.DbUpdateException ex)
            {
                result.ResultMessage = ex.InnerException.InnerException.Message;
            }
            catch (Exception ex)
            {
                result.ResultMessage = ex.Message;
            }

            return Json(result, JsonRequestBehavior.AllowGet);
        }
    }
}