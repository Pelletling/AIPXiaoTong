using Framework.Common;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AIPXiaoTong.Model
{
    public class ProjectManagement : BaseEntity
    {
        public long? MerchantID { get; set; }
        /// <summary>
        /// 项目所在区域
        /// </summary>
        public long? DistrictManagementID { get; set; }

        /// <summary>
        /// 项目名称
        /// </summary>
        [Display(Name = "项目名称")]
        [Required(ErrorMessage = "{0}不能为空")]
        [MaxLength(32, ErrorMessage = "{0}不能多于32位")]
        public string ProjetName { get; set; }

        /// <summary>
        /// 项目图片
        /// </summary>
        [Display(Name = "项目图片")]
        [MaxLength(128, ErrorMessage = "{0}不能多于128位")]
        public string ProjectImage { get; set; }

        /// <summary>
        /// 项目金额
        /// </summary>
        [Display(Name = "项目金额")]
        [Required(ErrorMessage = "{0}不能为空")]
        public decimal? ProjectAmount { get; set; }

        /// <summary>
        /// 剩余认筹额度
        /// </summary>
        [Display(Name = "剩余认筹额度")]
        public decimal? ResidueAmount { get; set; }

        /// <summary>
        /// 截止日期
        /// </summary>
        [Display(Name = "截止日期")]
        public DateTime Deadline { get; set; }

        /// <summary>
        /// 简短描述
        /// </summary>
        [Display(Name = "简短描述")]
        [MaxLength(60, ErrorMessage = "{0}不能多于60字")]
        public string Description { get; set; }

        /// <summary>
        /// 未通过原因
        /// </summary>
        [Display(Name = "未通过原因")]
        [MaxLength(128, ErrorMessage = "{0}不能多于128位")]
        public string Reason { get; set; }


        //--------------------------------------------------------------
        [ForeignKey("MerchantID")]
        public virtual Merchant Merchant { get; set; }

        [ForeignKey("DistrictManagementID")]
        public virtual DistrictManagement DistrictManagement { get; set; }

        /// <summary>
        /// 项目所在区域名称
        /// </summary>
        public string DistrictName { get { return DistrictManagement?.DistrictName; } }
        public string StatusDesc { get { return ((ProjectManagementStatus)Status).ToDescription(); } }
    }
}
