using AIPXiaoTong.Model;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using Framework.Common;
using Framework.Security;
using AIPXiaoTong.Model.Site;
using NLog;
using AIPXiaoTong.IService;

namespace AIPXiaoTong.Site.Controllers
{
    [AllowAnonymous]
    public class PingAnNotifyController : BaseController
    {
        public ILogger logger;
        private IAccountPingAnService iAccountPingAnService;
        private IOrderPaidService iOrderPaidService;
        private IMemberService iMemberService;
        private IPingAnOrderPaidService iPingAnOrderPaidService;

        private static string accountNotifyPrivateKey = System.Configuration.ConfigurationManager.AppSettings["PingAn_AccountNotifyPrivateKey"].ToString();

        public PingAnNotifyController(IAccountPingAnService iAccountPingAnService,
                                      IOrderPaidService iOrderPaidService,
                                      IMemberService iMemberService,
                                      IPingAnOrderPaidService iPingAnOrderPaidService)
        {
            this.iAccountPingAnService = iAccountPingAnService;
            this.iOrderPaidService = iOrderPaidService;
            this.iMemberService = iMemberService;
            this.iPingAnOrderPaidService = iPingAnOrderPaidService;

            logger = LogManager.GetCurrentClassLogger();
        }

        public ActionResult AccountNotify(string encryptData)
        {
            AccountPingAnTransDataDM model = new AccountPingAnTransDataDM();
          
            try
            {
                if (!string.IsNullOrEmpty(encryptData))
                {
                    var privateKey = RSAHelper.RSAPrivateKeyJava2DotNet(accountNotifyPrivateKey);

                    var decryptData = System.Text.Encoding.UTF8.GetString(RSAHelper.SectionDecrypt(HexHelper.HexStrTobyte(encryptData), privateKey));  //解密

                    var response = JsonHelper.Deserialize<AccountPingAnDM>(decryptData);

                    model = JsonHelper.Deserialize<AccountPingAnTransDataDM>(response.transData);

                    if (response.orderNo != null && model.data != null)
                    {
                        var pingAnOrderPaid = iPingAnOrderPaidService.Get(t => t.BankOrderNo == response.orderNo);

                        if (pingAnOrderPaid != null)
                        {
                            var entity = iAccountPingAnService.Get(t => t.MemberID == pingAnOrderPaid.OrderPaid.MemberID) ?? new AccountPingAn();
                            entity.BankCardNumber = model.data.inCardNo;

                            iAccountPingAnService.Save(entity);
                            iAccountPingAnService.Commit();
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                logger.Error("数据异常:" + ex);
            }

            return View(model);
        }


        public void FreezeSuccessNotity()
        {

        }

    }
}