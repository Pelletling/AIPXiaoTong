using AIPXiaoTong.IService;
using AIPXiaoTong.Model;
using AIPXiaoTong.Model.PingAnAPI;
using PingAnAPI;
using PingAnAPI.Model;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AIPXiaoTong.Service
{
    public class PingAnAPIService : IPingAnAPIService
    {
        private PingAnExec pingAnExec;

        public PingAnAPIService()
        {
            var url = System.Configuration.ConfigurationManager.AppSettings["PingAn_APIUrl"].ToString();
            var publicKey = System.Configuration.ConfigurationManager.AppSettings["PingAn_APIPublicKey"].ToString();
            var privateKey = System.Configuration.ConfigurationManager.AppSettings["PingAn_APIPrivateKey"].ToString();
            var redirectUrl = System.Configuration.ConfigurationManager.AppSettings["PingAn_RedirectUrl"].ToString();
            var autoLoginUrl = System.Configuration.ConfigurationManager.AppSettings["PingAn_ALUrl"].ToString();
            var returnUrl = System.Configuration.ConfigurationManager.AppSettings["PingAn_ALReturnUrl"].ToString();
            var sha1Key = System.Configuration.ConfigurationManager.AppSettings["PingAn_ALSha1Key"].ToString();
            var autoLoginPubKey = System.Configuration.ConfigurationManager.AppSettings["PingAn_ALPublicKey"].ToString();

            pingAnExec = new PingAnExec(url, publicKey, privateKey, redirectUrl, autoLoginUrl, returnUrl, sha1Key, autoLoginPubKey);
        }

        /// <summary>
        /// 预下单接口
        /// </summary>
        /// <returns></returns>
        public PreparedFreezeOrderResponse PreparedFreezeOrder(OrderPaid orderPaid, PingAnOrderPaid pingAnOrderPaid)
        {
            PreparedFreezeOrderRequest request = new PreparedFreezeOrderRequest();
            request.channel = pingAnOrderPaid.Channel;
            request.userName = orderPaid.MemberName;
            request.cardNumber = orderPaid.MemberIDNumber;
            request.mobile = orderPaid.MemberMobile;
            request.businessName = pingAnOrderPaid.BusinessName;
            request.orderValidDay = pingAnOrderPaid.OrderValidDay;
            request.freezeAmt = Convert.ToDouble(orderPaid.TransactionAmount);
            request.freezeTimeLimit = pingAnOrderPaid.FreezeTimeLimit;
            request.freezeProduct = pingAnOrderPaid.FreezeProduct;
            request.autoFreeze = pingAnOrderPaid.AutoFreeze;
            request.transCode = pingAnOrderPaid.TransCode;

            var response = pingAnExec.Exec(request);

            return response as PreparedFreezeOrderResponse;
        }

        /// <summary>
        /// 预下单接口
        /// </summary>
        /// <returns></returns>
        public AutoLoginResponse AutoLogin(PingAnOrderPaid pingAnOrderPaid, Member member)
        {
            AutoLoginRequest request = new AutoLoginRequest();
            request.accNo = pingAnOrderPaid.ClientNo;
            request.clientIdNo = member.IDNumber;
            request.clientIdType = "1";
            request.clientName = member.Name;
            request.mchId = pingAnOrderPaid.Channel;  //合作方渠道ID 和 商户ID同值
            request.redirectUrl = PingAnConfig.redirectUrl;
            request.state = PingAnConfig.returnUrl + "?orderNo=" + pingAnOrderPaid.BankOrderNo;
            request.telNo = member.Mobile;
            request.thirdMid = member.Mobile;
            request.timestamp = ((DateTime.Now.ToUniversalTime().Ticks - 621355968000000000) / 10000).ToString();
            request.umCode = "";

            //request.accNo = "";
            //request.clientIdNo = "330219196609107006";
            //request.clientIdType = "1";
            //request.clientName = "章寿尘";
            //request.mchId = "1007041";
            //request.redirectUrl = "https://bank-static-stg.pingan.com.cn/bbc/index/landing.html?menuId=M001";
            //request.state = "http://127.0.0.1?orderNo=9230081902142615914178";
            //request.telNo = "15601010001";
            //request.thirdMid = "15601010001";
            //request.timestamp = ((DateTime.Now.ToUniversalTime().Ticks - 621355968000000000) / 10000).ToString();
            //request.timestamp = "1548210608083";
            //request.umCode = "";

            var response = pingAnExec.GetAutoLoginPath(request);

            return response as AutoLoginResponse;
        }

        /// <summary>
        /// 查询订单接口
        /// </summary>
        /// <returns></returns>
        public QueryMarginsOrderDetailResponse QueryMarginsOrderDetail()
        {
            QueryMarginsOrderDetailRequest request = new QueryMarginsOrderDetailRequest();
            request.channel = "1007041";
            request.bankOrderNo = "9230081901312615814160";
            //request.cardNumber = "430981199211104634";
            request.transCode = "002";
            //request.accountType = "2";

            var response = pingAnExec.Exec(request);

            return response as QueryMarginsOrderDetailResponse;
        }

        /// <summary>
        /// 解止付接口
        /// </summary>
        /// <returns></returns>
        public UnFreezeMarginsOrderResponse UnFreezeMarginsOrder()
        {
            UnFreezeMarginsOrderRequest request = new UnFreezeMarginsOrderRequest();
            request.channel = "1007041";
            request.bankOrderNo = "9230081901312615814160";
            request.cardNumber = "430981199211104634";
            request.transCode = "004";

            var response = pingAnExec.Exec(request);

            return response as UnFreezeMarginsOrderResponse;
        }

    }
}
