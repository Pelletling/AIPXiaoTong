using AIPXiaoTong.IService;
using AIPXiaoTong.Model;
using AIPXiaoTong.Model.Site;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace AIPXiaoTong.Site.Controllers
{

    public class ProjectManagementController : BaseController
    {
        private IProjectManagementService iProjectManagementService;
        private IEmployeeService iEmployeeService;
        private IDistrictManagementService iDistrictManagementService;
        private IMerchantService iMerchantService;

        public ProjectManagementController(IProjectManagementService iProjectManagementService,
                                            IEmployeeService iEmployeeService,
                                            IDistrictManagementService iDistrictManagementService,
                                            IMerchantService iMerchantService)
        {
            this.iProjectManagementService = iProjectManagementService;
            this.iEmployeeService = iEmployeeService;
            this.iDistrictManagementService = iDistrictManagementService;
            this.iMerchantService = iMerchantService;
        }

        public ActionResult Index(ProjectManagementQM model)
        {
            var list = this.iProjectManagementService.GetListModel<ProjectManagementLM, ProjectManagementQM>(model);

            var empInfo = iEmployeeService.Get(currentUser.ID) ?? new Employee();

            ViewBag.merInfo = iMerchantService.Get(empInfo.MerchantID);

            ViewBag.DistrictNameList = this.iDistrictManagementService.GetListModel<DistrictManagementLM, DistrictManagementQM>();


            if (Request.IsAjaxRequest())
            {
                return PartialView("Grid", list);
            }
            else
            {
                BindData();
            }

            return View(list);
        }

        private void BindData()
        {
            var empInfo = iEmployeeService.Get(currentUser.ID) ?? new Employee();

            ViewBag.merInfo = iMerchantService.Get(empInfo.MerchantID);

            ViewBag.DistrictNameList = this.iDistrictManagementService.GetListModel<DistrictManagementLM, DistrictManagementQM>();
        }


        public ActionResult Create(long? ID = null)
        {
            var model = iProjectManagementService.GetViewModel<ProjectManagementCM>(ID);                  

            BindData();

            return View(model);
        }

        [ValidateAntiForgeryToken]
        [HttpPost]
        public ActionResult Create(ProjectManagementCM m)
        {
            var entity = iProjectManagementService.Get(m.ID) ?? new ProjectManagement();

            try
            {
                if (ModelState.IsValid)
                {
                   
                    var empInfo = iEmployeeService.Get(currentUser.ID) ?? new Employee();

                    entity.MerchantID = empInfo.MerchantID;
                    entity.ProjetName = m.ProjetName.Trim();
                    entity.DistrictManagementID = m.DistrictManagementID;
                    entity.ProjectAmount = m.ProjectAmount;
                    if (m.ResidueAmount !=null && (m.ProjectAmount>m.ResidueAmount))
                    {
                        entity.ResidueAmount = m.ResidueAmount;
                    }
                    else
                    {
                        entity.ResidueAmount = m.ProjectAmount;
                    }

                    entity.Description = m.Description;
                    entity.Deadline = m.Deadline;

                    if (entity.ProjectImage != m.ProjectImage)
                    {
                        var TemFilePath = @"\Temp\TemProjectImage"+m.ProjectImage.Substring(m.ProjectImage.LastIndexOf("\\"));

                        entity.ProjectImage = @"\Images\ProjectImage\" + Guid.NewGuid() + ".jpg";
                        System.IO.File.Copy(Server.MapPath(TemFilePath), Server.MapPath(entity.ProjectImage));
                    }

                    iProjectManagementService.Save(entity);
                    iProjectManagementService.Commit();

                    this.ShowTip();
               
                }
                else
                {
                    AddError();
                }
            }
            catch (Exception ex)
            {

                this.AddError(ErrorCode.Exception, ex.Message);
            }

            return RedirectToAction("Create", new { ID = entity.ID });
        }

        public JsonResult CodeIsExists(long ID, string ProjetName)
        {
            return Json(!iProjectManagementService.Exists(t => t.ID != ID && t.ProjetName == ProjetName.Trim()), JsonRequestBehavior.AllowGet);
        }

        public JsonResult Delete(long ID)
        {
            var result = iProjectManagementService.AjaxDelete(ID);

            return Json(result, JsonRequestBehavior.AllowGet);
        }



        public JsonResult UploadFile()
        {
            return UploadFile("/Temp/TemProjectImage/", Request.Files[0].FileName);
        }

        protected JsonResult UploadFile(string path, string fileName)
        {
            try
            {
                var file = Request.Files[0];
                path = System.Web.HttpContext.Current.Server.MapPath(path);
                if (!System.IO.Directory.Exists(path))
                {
                    System.IO.Directory.CreateDirectory(path);
                }
                string FilePath = path + fileName;
                file.SaveAs(FilePath);
                return Json(new { Msg = "", Path = FilePath, FileName = fileName }, JsonRequestBehavior.AllowGet);
            }
            catch (Exception ex)
            {
                return Json(new { Msg = ex.Message, Path = "", FileName = fileName }, JsonRequestBehavior.AllowGet);
            }
        }
    }
}