using Framework.Common;
using Framework.Requests;
using Framework.Security;
using GuangDaAPI;
using GuangDaAPI.Model;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using System.Security.Cryptography;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Web;

namespace GuangDaTest
{
    class Program
    {
        static GuangDaExec guangDaExec;
        static string userid = "tlzfsh";
        static string pwd = "111111";
        static string cifClientId = "81ac0a0c2f038fd5";

        static void Main(string[] args)
        {
            //预下单数据
            //string signContent = "autoFreeze=00&businessName=购机业务1&cardNumber=430981199211104634&channel=1007041&freezeAmt=0.01&freezeProduct=1&freezeTimeLimit=4&mobile=15273738880&orderValidDay=4&transCode=001&userName=刘勋";
            //var sign = RSASign(signContent);

            //BBC订单查询数据
            // string queryContent = "bankOrderNo=9230081901172615314167&channel=1007041&transCode=002";
            //var orderinfo = GetBBCOrserInfo(queryContent);

            //免登跳转数据   encryptData
            Dictionary<string, string> autoData = new Dictionary<string, string>();
            autoData.Add("clientIdType", "1");
            autoData.Add("clientIdNo", "430981199211104634");
            autoData.Add("clientName", "刘勋");
            autoData.Add("telNo", "15273738880");
           // autoData.Add("accNo", "6230580000000003389");
            autoData.Add("thirdMid", "15273738880");
            autoData.Add("timestamp",DateTime.Now.ToString());
            // autoData.Add("signature", "");

            string autoLoginContent = "";
            string signString = "";

            foreach (var m in autoData.Where(t => !string.IsNullOrWhiteSpace(t.Value))/*.OrderBy(t => t.Key)*/)
            {
                signString += "&" + m.Key + "=" + m.Value;

                if (m.Key != "key")
                {
                    autoLoginContent += "&" + m.Key + "=" + m.Value;
                }
            }


            string timestamp = DateTime.Now.ToString();
            // string autoLoginContent2 = "clientIdNo=330219196708213250";
            BBCAutoLogin(autoLoginContent.Substring(1));
            // BBCAutoLogin(autoLoginContent2);




            // var sign = RSASign(signContent);

            //guangDaExec = new GuangDaExec(userid, AppDomain.CurrentDomain.BaseDirectory + userid + ".pfx", pwd, true);

            //开户
            //Create();

            //2.59.	鉴权开户接口
            //Create1();

            //2.60.	开户查询接口
            //Create1Check();

            //上传身份证
            //UploadIdCardImage();

            //充值
            //var bTrsInResponse = Recharge();

            //冻结
            //var currentFundFreezeResponse = Freeze();

            //解冻
            //var unfrozenFixedDepositResponse = Unfreeze(currentFundFreezeResponse.Body.CoPatrnerJnlNo);

            //提现（5万以下）
            //var eComGAmountResponse = SmallWithdraw();

            //提现（5万以上）
            //var bJUnionPayPaymentResponse = LargeWithdraw();

            //var response = BTrsVeriAmount();

            //pinyin();

            //BCifAcNoAmount();

            //QueryFreezeCombination();

            //CheckFile();

            Console.WriteLine("OK");
            Console.ReadKey();
        }

        public static void pinyin()
        {
            string s = "强";

            Console.WriteLine(s.GetPinYin());
        }

        public static bool xml()
        {
            string xml = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><Message><Head><ReqJnlNo>201811151429400256</ReqJnlNo><ResJnlNo>3905251</ResJnlNo><ResTime>2018-11-15 14:05:47</ResTime><ResCode>000000</ResCode><ResMsg></ResMsg></Head><Body><CoPatrnerJnlNo>201811151429400466</CoPatrnerJnlNo><EbankJnlNo>3905251</EbankJnlNo><CifClientId>6d57392972f663e6</CifClientId><Amount>10.02</Amount><TrsType>0</TrsType><Currency>CNY</Currency><CebTrsTime>2018-11-15 14:05:47</CebTrsTime><Remark>资金转入</Remark><Reserve1>901f37023575</Reserve1><Reserve2></Reserve2><Reserve3></Reserve3></Body></Message>";

            //xml = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><Message><Head><ReqJnlNo>201811151429400256</ReqJnlNo><ResJnlNo>3905251</ResJnlNo><ResTime>2018-11-15 14:05:47</ResTime><ResCode>000000</ResCode><ResMsg></ResMsg></Head></Message>";

            var result = XmlHelper.XmlDeserialize<BTrsInResponse>(xml);

            return true;
        }


        /// <summary>
        /// 开户
        /// </summary>
        /// <returns></returns>
        public static string Create()
        {
            BCifAcctNoOpenRequest request = new BCifAcctNoOpenRequest();

            request.Head.ReqJnlNo = GuidHelper.GenUniqueId();//"t1541553972983s1";

            request.Body.CifAddr = "北京市复兴门外大街";
            request.Body.CifClientId = cifClientId;
            request.Body.CifEnName = "quanyi";
            request.Body.CifIdExpiredDate = "20190909";
            request.Body.CifName = "廖一";
            request.Body.CifPhoneCode = "15600110011";
            request.Body.CifPostCode = "100000";
            request.Body.IdNo = "460031198806150013";
            request.Body.IdType = "P00";
            request.Body.OperateType = "0";
            request.Body.ProvinceCode = "110000";
            request.Body.CityCode = "1101001";
            request.Body.NetCheckFlag = "0";
            request.Body.BankCardPhoneCode = "15600110011";
            request.Body.BankCardType = "1";
            request.Body.BankAcNo = "6212260200000110001";
            request.Body.BankName = "工商银行";
            request.Body.SubBranchName = "北京分行";
            request.Body.OpenChannel = "1";

            var result = guangDaExec.Exec(request) as BCifAcctNoOpenResponse;

            return "OK";
        }

        /// <summary>
        /// 开户
        /// </summary>
        /// <returns></returns>
        public static string Create1()
        {
            AuthenticationToOpenAccountRequest request = new AuthenticationToOpenAccountRequest();

            request.Head.ReqJnlNo = GuidHelper.GenUniqueId();

            request.Body.CoPatrnerJnlNo = GuidHelper.GenUniqueId();
            request.Body.CifName = "张三";
            request.Body.CifClientId = GuidHelper.To16String();
            request.Body.IdType = "P00";
            request.Body.IdNo = "110101199003074477";
            request.Body.BankCardPhoneCode = "17620132005";
            request.Body.CifPhoneCode = "17620132005";
            request.Body.CifIdExpiredDate = "20190909";
            request.Body.CifAddr = "北京市复兴门外大街";
            request.Body.CifPostCode = "100000";
            request.Body.CifEnName = "liaoyz";
            request.Body.CifENFName = "liaoyz";
            request.Body.OperateType = "0";
            request.Body.NetCheckFlag = "0";
            request.Body.BankCardType = "1";
            request.Body.BankAcNo = "6212260200000110002";
            request.Body.BankName = "工商银行";
            request.Body.SubBranchName = "北京分行";
            request.Body.OpenChannel = "1";
            request.Body.BookDate = DateTime.Now.ToString("yyyyMMdd");

            var result = guangDaExec.Exec(request) as AuthenticationToOpenAccountResponse;

            return "IsOK:" + result.IsOK;
        }

        /// <summary>
        /// 开户查询
        /// </summary>
        /// <returns></returns>
        public static string Create1Check()
        {
            AuthenticationToOpenAccountCheckRequest request = new AuthenticationToOpenAccountCheckRequest();

            request.Head.ReqJnlNo = GuidHelper.GenUniqueId();

            request.Body.CoPatrnerJnlNo = GuidHelper.GenUniqueId();
            request.Body.CifClientId = cifClientId;
            request.Body.BookDate = DateTime.Now.ToString("yyyyMMdd");

            var result = guangDaExec.Exec(request) as AuthenticationToOpenAccountCheckResponse;

            return "IsOK:" + result.IsOK;
        }

        /// <summary>
        /// 身份证上传
        /// </summary>
        /// <returns></returns>
        public static string UploadIdCardImage()
        {
            UploadIdCardImageRequest request = new UploadIdCardImageRequest();

            request.Head.ReqJnlNo = GuidHelper.GenUniqueId();

            request.Body.IdCardFront = Framework.Common.ImageHelper.ToBase64(@"D:\MyProject\AIPXiaoTong\GuangDaTest\bin\Debug\QQ1.png");
            request.Body.IdCardBehind = Framework.Common.ImageHelper.ToBase64(@"D:\MyProject\AIPXiaoTong\GuangDaTest\bin\Debug\QQ2.png");
            request.Body.CifClientId = cifClientId;

            var result = guangDaExec.Exec(request) as UploadIdCardImageResponse;

            return "OK";
        }

        /// <summary>
        /// 充值
        /// </summary>
        /// <returns></returns>
        public static BTrsInResponse Recharge()
        {
            BTrsInRequest request = new BTrsInRequest();

            request.Head.ReqJnlNo = GuidHelper.GenUniqueId();

            request.Body.CoPatrnerJnlNo = GuidHelper.GenUniqueId();
            request.Body.TrsDate = DateTime.Now.ToString("yyyyMMdd");
            request.Body.CifClientId = cifClientId;
            request.Body.Amount = "10.02";
            request.Body.TrsType = "0";
            request.Body.Currency = "CNY";
            request.Body.Remark = "资金转入";
            request.Body.Reserve1 = "";
            request.Body.Reserve2 = "";
            request.Body.Reserve3 = "";

            var result = guangDaExec.Exec(request) as BTrsInResponse;

            return result;
        }

        /// <summary>
        /// 冻结
        /// </summary>
        /// <returns></returns>
        public static CurrentFundFreezeResponse Freeze()
        {
            CurrentFundFreezeRequest request = new CurrentFundFreezeRequest();

            request.Head.ReqJnlNo = GuidHelper.GenUniqueId();

            request.Body.CoPatrnerJnlNo = GuidHelper.GenUniqueId();
            request.Body.TrsDate = DateTime.Now.ToString("yyyyMMdd");
            request.Body.CifClientId = cifClientId;
            request.Body.FreezeType = "0";
            request.Body.Currency = "CNY";
            request.Body.CEFlag = "0";
            request.Body.ThawDate = DateTime.Now.AddDays(1).ToString("yyyyMMdd");
            request.Body.Amount = "10.02";
            request.Body.ProtocolNo = "";
            request.Body.GroupNo = "";
            request.Body.TravelStartDay = "";
            request.Body.TravelEndDay = "";
            request.Body.ProtocolDate = "";
            request.Body.Remark = "";
            request.Body.Reserve1 = "";
            request.Body.Reserve2 = "";
            request.Body.Reserve3 = "";
            request.Body.Reserve4 = "";
            request.Body.Reserve5 = "";

            var result = guangDaExec.Exec(request) as CurrentFundFreezeResponse;

            return result;
        }

        /// <summary>
        /// 解冻
        /// </summary>
        /// <returns></returns>
        public static UnfrozenFixedDepositResponse Unfreeze(string coPatrnerJnlNo)
        {
            UnfrozenFixedDepositRequest request = new UnfrozenFixedDepositRequest();

            request.Head.ReqJnlNo = GuidHelper.GenUniqueId();

            request.Body.TrsDate = "20181115";
            request.Body.CoPatrnerJnlNo = coPatrnerJnlNo;
            request.Body.ManageFlag = "5";
            request.Body.Currency = "CNY";

            var result = guangDaExec.Exec(request) as UnfrozenFixedDepositResponse;

            return result;
        }

        /// <summary>
        /// 提现，五万以下
        /// </summary>
        /// <returns></returns>
        public static EComGAmountResponse SmallWithdraw()
        {
            EComGAmountRequest request = new EComGAmountRequest();

            request.Head.ReqJnlNo = GuidHelper.GenUniqueId();

            request.Body.Amount = "0.02";
            request.Body.CifClientId = cifClientId;
            request.Body.Currency = "CNY";
            request.Body.ChannelSeq = GuidHelper.GenUniqueId();
            request.Body.TrsDate = DateTime.Now.ToString("yyyyMMdd");
            request.Body.WDType = "1";
            request.Body.Remark = "提现";
            request.Body.WDName = "李安安";
            request.Body.IdType = "P00";
            request.Body.IdNo = "110101199003071292";
            request.Body.WDAcNo = "6212260200000110005";
            request.Body.WDBankNo = "102100099996";
            request.Body.WDInnerBankFlag = "1";
            request.Body.Reserve1 = "";
            request.Body.Reserve2 = "";
            request.Body.Reserve3 = "";

            var result = guangDaExec.Exec(request) as EComGAmountResponse;

            return result;
        }

        /// <summary>
        /// 提现，五万以上
        /// </summary>
        /// <returns></returns>
        public static BJUnionPayPaymentResponse LargeWithdraw()
        {
            BJUnionPayPaymentRequest request = new BJUnionPayPaymentRequest();

            request.Head.ReqJnlNo = GuidHelper.GenUniqueId();

            request.Body.CifClientId = cifClientId;
            request.Body.CoPatrnerJnlNo = GuidHelper.GenUniqueId();
            request.Body.TrsDate = DateTime.Now.ToString("yyyyMMdd");
            request.Body.Currency = "CNY";
            request.Body.AcNo = "460031198806150013";
            request.Body.PayeeName = "廖一";
            request.Body.PayeeBankName = "工商银行";
            request.Body.PayeeBankNo = "102100099996";
            request.Body.AcType = "2";
            request.Body.Amount = "0.1";
            request.Body.TransferFee = "0";
            request.Body.Remark = "提现";
            request.Body.Reserve1 = "";
            request.Body.Reserve2 = "";
            request.Body.Reserve3 = "";
            request.Body.Reserve4 = "";
            request.Body.Reserve5 = "";

            var result = guangDaExec.Exec(request) as BJUnionPayPaymentResponse;

            return result;
        }

        /// <summary>
        /// 对账
        /// </summary>
        /// <returns></returns>
        public static string CheckFile()
        {
            BFinFundServiceReqRequest request = new BFinFundServiceReqRequest();

            request.Head.ReqJnlNo = GuidHelper.GenUniqueId();

            request.Body.QryDate = "20181225";
            request.Body.ServiceId = "BMerCheckJnlFileReq";

            var result = guangDaExec.Exec(request) as BFinFundServiceReqResponse;

            return "OK";
        }

        /// <summary>
        /// 2.9.资金变动查证接口
        /// </summary>
        /// <returns></returns>
        public static string BTrsVeriAmount()
        {
            BTrsVeriAmountRequest request = new BTrsVeriAmountRequest();

            request.Head.ReqJnlNo = GuidHelper.GenUniqueId();

            request.Body.CoPatrnerJnlNo = "201812061704393760";
            request.Body.TrsDate = "20181206";

            var result = guangDaExec.Exec(request) as BTrsVeriAmountResponse;

            return "OK";
        }

        public static string BCifAcNoAmount()
        {
            BCifAcNoAmountRequest request = new BCifAcNoAmountRequest();

            request.Head.ReqJnlNo = GuidHelper.GenUniqueId();

            request.Body.CifClientId = "81ac0a0c2f038fd5";

            var result = guangDaExec.Exec(request) as BCifAcNoAmountResponse;

            return "全部余额：" + result?.Body?.AcNoBlance;
        }

        public static string QueryFreezeCombination()
        {
            QueryFreezeCombinationRequest request = new QueryFreezeCombinationRequest();

            request.Head.ReqJnlNo = GuidHelper.GenUniqueId();
            request.Body.StartCount = 0;
            request.Body.QryCount = 99;
            request.Body.UnfreezeDate = "20190501";

            request.Body.CifClientId = "81ac0a0c2f038fd5";

            var result = guangDaExec.Exec(request) as QueryFreezeCombinationResponse;

            return "OK";
        }

        private static string RSASign(string text)
        {
            string result = "";
            Program p = new Program();
            string url = "https://bbc-stg1.pingan.com.cn:6443/bbc/openapi/bron_bbc_margins.preparedFreezeOrderInfo";

            string privateKey = "MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCBB2JJ2+JVKTFF/p8YBFR2xhJYKZ36SSdffV9Aji+fq9M6IkGFE9VEbijqnoVNbBcfCeDL8+HZxg0g/gq14mmc3QFNed4rjWDawIgWOWpH661SWAmru0fxddsVfv/qPEvotpJLYLZmoB6g+wewk48QBhiZukjWK0mypj/ileUUMDecvjDB0ktP4/XUE/F+gWAL4AJdUE/UDK9KAYDRl6MSBkVPZoZVmUxQVst/1m3AENGxqJdBF8zpAwr8z3q4Yo5gtsXAUxcTWFI0Ev3LH8GVmuZA71C1zpnAWzFQ2LVgPjoFTlFiF5CJ5rlHbwVLUG4KG5pcr/gCyBRSmrqkhYJlAgMBAAECggEAMxSSQ70qAB7bo+MmZqKoMZE+h+qJ4SD+1l3SzMK9dc/XQod3OtDcOEgIKMHy8fCdwqrtdLCrM8SlQ+9unAzzVKdlsZ9SZhmFQ3S/K1U1jx1tM1EpGvR8icnnnr31YGzYfFty1SaHb19qYL6gj7YLCAPxz0IhPbBLb89DMVe4JeJTVUxKGmsZEhWz/AMbZxWH+dvQjQ174MXD0tLLgiz72Dih5qHwYBEWmkYU0t+iWWx+EEuseYvS9BRR90wQW3bGYYXMtLfkvivBSvftlndRUdEuw844GwqJaBwdGi+6jTM4yUNsosgEl8yqm0ch4bA0o7fQeKlO2z19BflPrpPzoQKBgQDSymYAzfTjYjLmwaoRnh2J2rccxGkSesUz0rUxtBsL35C5ZMiaA9KWIkKqb+tgQcOMidmytP2LbaACwdmHU1UWST9nU5c19nPQQcj+HvqfAb9DTBk+8fbnurdofwP0SuC5fKD+iU9XkIZrpE3JVduLeXDQ02BKviec0x38wOwKDQKBgQCcs8zFqvmj/L23s8Slpjl6GWbqvUNPPriA0WhT/+kMfANdNpWvH8P7UxVF08EgIbEFXgUsbSgYI90WObyoBnI+Gaes8QFeRoRFGWZXWNGm+1us2mcQ9A5u6PYIrRP8FsdJX1eM8RuV2q/qkqUEQt9WTlsyrLnmbqWnfJVDxBZ7uQKBgQCqGolcRthDkuBO1aQ/2WAu+iBhB6NfNVHkszpjpNtapoys/8beew06+OThk7XXlNqQlEHo9CPTm6DP+M1pZnc4p92RraRN+NeXDS9821UWcht93HBXGn5MnKIborx3LOHS7d8h6X7sxAWl4g6f1jh4goTnEF0ZlAB1ju0ZJjqVFQKBgAPoL7jV9Hd0O76yyrpelJxIudoscdst8yezEOjXPpZDGUpfrAe7wQUpIySkjPIiJOm/WF2tMwy3CDIfqmZ+EqcduKKFN8WD+JRId9bBrih9p+F9aIhxrVJymH/K4O6uGrXnnKU09b0cwLoWgerDSBI8zeVLjS8Dnzm3z3jrEKxxAoGAJLQNmsepFEL934zXtMteD4WWeEvM47pYZLm4g0tvQMQnSav4Xf3oTvar9VyfjXINWVrqs/qZbgjHaPGRhqXmw2RAFEkVe37Hny8uKD2i14x86Yz9u5qCveHEsPf3Gyr40JFD/zO0mt/BNezp++ECR52DewItw+yW6cIrEM+yYLE=";
            string publicKey = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAy/o0tFwhKNnT4A5XMhNlOe4vE9zMmbg6/kqWxEAO5TzALA+iJ3jp++c96PgItfOVimQhkcacV0Xenn4iK0wTIlZQtVfV0k4ZJGSNj0DGgh9GIeCf2fb0D8YJ1kgtAj8SpWh4jEae7k3onBpAMyl0+8PHUDfIcgvFArMMZiMpt5MIW9LtSHLqOcaKJGTsfdZfDcP+ve3OR+k9m1iu73PBh6wGjB9yvs/eEtL9DsQmZdOPSRr48iKdCUoXTkzbt6XP55GKX/li10m/UwdhnAo5CS8HfetesF4fDowZSNQ+tYDtSM+PgSWnESQcjSHLfdFsTiezFuINGK+JhzLTK1NQrQIDAQAB";

            var sign = Framework.Security.RSAHelper.SHA1WithRSA(text, privateKey);
            string a = text + "&sign=" + sign;

            result = Request.Post(url, text + "&sign=" + sign, System.Net.SecurityProtocolType.Tls12);

            var sortresult = p.StortJson(result);

            JObject nosign = JObject.Parse(sortresult);
            nosign.Remove("sign");
            string content = "data=" + JObject.Parse(sortresult)["data"].ToString() + "&responseCode=" + JObject.Parse(sortresult)["responseCode"].ToString() + "&responseMsg=" + JObject.Parse(sortresult)["responseMsg"].ToString() + "";


            if (!RSAHelper.SHA1WithRSAVerify(content, JObject.Parse(sortresult)["sign"].ToString(), publicKey))
            {
                throw new Exception("error返回验签失败");
            }

            return sign;
        }

        public string StortJson(string json)
        {
            var dic = JsonConvert.DeserializeObject<SortedDictionary<string, object>>(json);
            SortedDictionary<string, object> keyValues = new SortedDictionary<string, object>(dic);
            keyValues.OrderBy(m => m.Key);//升序 
            return JsonConvert.SerializeObject(keyValues);
        }

        private static string GetBBCOrserInfo(string text)
        {
            string result = "";
            string url = "https://bbc-stg1.pingan.com.cn:6443/bbc/openapi/bron_bbc_margins.qryMarginsOrderDetialByCustomer";

            string privateKey = "MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCBB2JJ2+JVKTFF/p8YBFR2xhJYKZ36SSdffV9Aji+fq9M6IkGFE9VEbijqnoVNbBcfCeDL8+HZxg0g/gq14mmc3QFNed4rjWDawIgWOWpH661SWAmru0fxddsVfv/qPEvotpJLYLZmoB6g+wewk48QBhiZukjWK0mypj/ileUUMDecvjDB0ktP4/XUE/F+gWAL4AJdUE/UDK9KAYDRl6MSBkVPZoZVmUxQVst/1m3AENGxqJdBF8zpAwr8z3q4Yo5gtsXAUxcTWFI0Ev3LH8GVmuZA71C1zpnAWzFQ2LVgPjoFTlFiF5CJ5rlHbwVLUG4KG5pcr/gCyBRSmrqkhYJlAgMBAAECggEAMxSSQ70qAB7bo+MmZqKoMZE+h+qJ4SD+1l3SzMK9dc/XQod3OtDcOEgIKMHy8fCdwqrtdLCrM8SlQ+9unAzzVKdlsZ9SZhmFQ3S/K1U1jx1tM1EpGvR8icnnnr31YGzYfFty1SaHb19qYL6gj7YLCAPxz0IhPbBLb89DMVe4JeJTVUxKGmsZEhWz/AMbZxWH+dvQjQ174MXD0tLLgiz72Dih5qHwYBEWmkYU0t+iWWx+EEuseYvS9BRR90wQW3bGYYXMtLfkvivBSvftlndRUdEuw844GwqJaBwdGi+6jTM4yUNsosgEl8yqm0ch4bA0o7fQeKlO2z19BflPrpPzoQKBgQDSymYAzfTjYjLmwaoRnh2J2rccxGkSesUz0rUxtBsL35C5ZMiaA9KWIkKqb+tgQcOMidmytP2LbaACwdmHU1UWST9nU5c19nPQQcj+HvqfAb9DTBk+8fbnurdofwP0SuC5fKD+iU9XkIZrpE3JVduLeXDQ02BKviec0x38wOwKDQKBgQCcs8zFqvmj/L23s8Slpjl6GWbqvUNPPriA0WhT/+kMfANdNpWvH8P7UxVF08EgIbEFXgUsbSgYI90WObyoBnI+Gaes8QFeRoRFGWZXWNGm+1us2mcQ9A5u6PYIrRP8FsdJX1eM8RuV2q/qkqUEQt9WTlsyrLnmbqWnfJVDxBZ7uQKBgQCqGolcRthDkuBO1aQ/2WAu+iBhB6NfNVHkszpjpNtapoys/8beew06+OThk7XXlNqQlEHo9CPTm6DP+M1pZnc4p92RraRN+NeXDS9821UWcht93HBXGn5MnKIborx3LOHS7d8h6X7sxAWl4g6f1jh4goTnEF0ZlAB1ju0ZJjqVFQKBgAPoL7jV9Hd0O76yyrpelJxIudoscdst8yezEOjXPpZDGUpfrAe7wQUpIySkjPIiJOm/WF2tMwy3CDIfqmZ+EqcduKKFN8WD+JRId9bBrih9p+F9aIhxrVJymH/K4O6uGrXnnKU09b0cwLoWgerDSBI8zeVLjS8Dnzm3z3jrEKxxAoGAJLQNmsepFEL934zXtMteD4WWeEvM47pYZLm4g0tvQMQnSav4Xf3oTvar9VyfjXINWVrqs/qZbgjHaPGRhqXmw2RAFEkVe37Hny8uKD2i14x86Yz9u5qCveHEsPf3Gyr40JFD/zO0mt/BNezp++ECR52DewItw+yW6cIrEM+yYLE=";
            // string publicKey = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAy/o0tFwhKNnT4A5XMhNlOe4vE9zMmbg6/kqWxEAO5TzALA+iJ3jp++c96PgItfOVimQhkcacV0Xenn4iK0wTIlZQtVfV0k4ZJGSNj0DGgh9GIeCf2fb0D8YJ1kgtAj8SpWh4jEae7k3onBpAMyl0+8PHUDfIcgvFArMMZiMpt5MIW9LtSHLqOcaKJGTsfdZfDcP+ve3OR+k9m1iu73PBh6wGjB9yvs/eEtL9DsQmZdOPSRr48iKdCUoXTkzbt6XP55GKX/li10m/UwdhnAo5CS8HfetesF4fDowZSNQ+tYDtSM+PgSWnESQcjSHLfdFsTiezFuINGK+JhzLTK1NQrQIDAQAB";

            var sign = Framework.Security.RSAHelper.SHA1WithRSA(text, privateKey);

            string a = text + "&sign=" + sign;

            result = Request.Post(url, text + "&sign=" + sign, System.Net.SecurityProtocolType.Tls12);

            return result;
        }

        private static string BBCAutoLogin(string text)
        {
            string mchId = "1007041";
            string channel = "1007041";
            string url = "https://rmb-stg.pingan.com.cn/brcp/uc/cust/uc-third-auth.autoLogin.do";

            string publicKey = "MIGiMA0GCSqGSIb3DQEBAQUAA4GQADCBjAKBhACGeGMZ03Z7dMDgU7CcqN7Omlto1wEg+Y6g5ZvTzplhXOHSmtkyG3b3wYVg/aQeyWt2A6r7mbLaUx9TWDIdG/gKRluR7egYY1/3Ql0yp40XFn5MLXmEKXUS9th8IvdwL2KJU7sYNpR4cQ7LT21F/E6ejsUQ9DGyr7unNE4Hfk6eRCoVvQIDAQAB";

            string sha1Key = "b34dc091889949cc86e85978355756b4";     // 平安分配加签key
            string signature = Framework.Security.Crypt.SHA1(text.ToLower() + sha1Key);
            string predata = text + "&signature=" + signature;

            //冻结流程可以不传redirectUrl;如果有多个产品入口redirectUrl必传并且也要拼接menuId,menuId字段的值由银行分配
            string redirectUrl = System.Web.HttpUtility.UrlEncode("https://bank-static-stg.pingan.com.cn/bbc/index/landing.html?menuId=1007041", System.Text.Encoding.UTF8);

            //http://xxx 需要商户配置, 免登进入银行页面点击头部返回按钮返回商户的页面地址
            string returnUrl = HttpUtility.UrlEncode("http://127.0.0.1?orderNo=9230081901172615314167", Encoding.UTF8);
            string state = HttpUtility.UrlEncode("returnUrl=" + returnUrl, Encoding.UTF8);

            publicKey = RSAHelper.RSAPublicKeyJava2DotNet(publicKey);
            string encryptData = HexHelper.byteTo16HexStr(System.Text.Encoding.Default.GetBytes(RSAHelper.EncryptByPublicKey(publicKey, predata)));

            // string urlpath = url + "?channel=" + channel + "&mchId=" + mchId + "&encryptData=" + encryptData + "&redirectUrl=" + redirectUrl + "&state=" + state;
            string urlpath = url +"?mchId=" + mchId + "&encryptData=" + encryptData;

            return urlpath;
        }

    }
}
